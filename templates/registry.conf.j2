server {
    listen                     443 ssl http2;
    server_name                {{ ansible_fqdn }};

    server_tokens              off;

    ssl                        on;
    ssl_certificate            /etc/ssl/{{ ansible_hostname }}.pem;
    ssl_certificate_key        /etc/ssl/{{ ansible_hostname }}.key;

    ssl_stapling               on;
    ssl_stapling_verify        on;
    ssl_protocols              TLSv1.2;
    ssl_dhparam                /etc/nginx/ssl/dhparams.pem;
    ssl_prefer_server_ciphers  on;
    ssl_session_cache          shared:SSL:10m;
    ssl_ciphers                "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve             secp384r1; # Requires nginx >= 1.1.0
    ssl_session_tickets        off; # Requires nginx >= 1.5.9
    resolver                   213.186.33.99 valid=300s;
    resolver_timeout           5s;


    location / {
      if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
        return 404;
      }

      proxy_pass                          {{ registry_url }};
      proxy_set_header  Host              $http_host;   # required for docker client's sake
      proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
      proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Proto $scheme;
      proxy_read_timeout                  900;
    }

   # redirect server error pages to the static page /50x.html
    #
    error_page  404 500 502 503 504  /50x.html;
    location = /50x.html {
        root   /var/lib/nginx/html/;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    location ~ /\.ht {
        deny  all;
    }
}